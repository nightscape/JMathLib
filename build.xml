<?xml version="1.0"?>

<project name="JMathLib" basedir="." default="compile">

    <!-- grab the properties file -->
    <!--    <property file="${user.home}/build.properties" /> -->
    <property file="build.properties" />

    <!-- include all the jars in the classpath -->
    <path id="classpath">
      <fileset dir="." >
        <include name="**/*.jar" />
      </fileset>
    </path>

    <!-- ================================================================= -->
    <!-- E N V                                                             -->
    <!-- ================================================================= -->
    <target name="env" >
        <echo message="java.home = ${java.home}" />
        <echo message="user.home = ${user.home}" />
    </target>

    <!-- ================================================================= -->
    <!-- C O M P I L E                                                     -->
    <!-- ================================================================= -->
    <target name="compile" depends="env">
        <javac srcdir="${build.src}"
               destdir="${build.dest}"
               debug="${debug}"
               deprecation="${deprecation}"
               optimize="${optimize}"
	       classpath="${junitpath}:${build.dest}:.:${java.class.path}"
               >
            <classpath refid="classpath" />
        </javac>

    </target>

    <!-- ================================================================= -->
    <!-- Copy M-files to bin directories                                   -->
    <!-- ================================================================= -->
    <target name = "mfiles">
    <copy todir="${build.dest}">
    	<fileset dir="${build.src}" includes="**/*.m">
        </fileset>
    </copy>
    </target>

    <!-- ================================================================= -->
    <!-- Copy Resource Bundles to bin directories                          -->
    <!-- ================================================================= -->
    <target name = "resources">
    <copy todir="${build.dest}">
    	<fileset dir="${build.src}" includes="**/*.properties">
        </fileset>
    </copy>
    </target>

    <!-- ================================================================= -->
    <!-- Copy images to bin directories                                    -->
    <!-- ================================================================= -->
    <target name = "images">
    <copy todir="${build.dest}">
    	<fileset dir="${build.src}">
          <include name="**/*.gif" />
          <include name="**/*.jpg" />
      </fileset>
    </copy>
    </target>

	<!-- ================================================================= -->
    <!-- Test                                                              -->
    <!-- ================================================================= -->
    <target name = "test" depends="compile">
    <java classpath="${build.dest}:.:${java.class.path}"
          classname="${test.class}"
	  fork="true">
          <classpath refid="classpath" />
    </java>
    </target>

    <!-- ================================================================= -->
    <!-- Run                                                               -->
    <!-- ================================================================= -->
    <target name = "run" depends="compile,mfiles,resources,images">
    <java classpath="${junitpath}:${build.dest}:.:${java.class.path}"
          classname="MathLib.UI.AWT.GUI"
	  fork="true">
	  <arg value='-d' /> 
	  <classpath refid="classpath" />
   </java>
    </target>

    <!-- ================================================================= -->
    <!-- J A R                                                             -->
    <!-- ================================================================= -->
    <target name="jar" depends="compile">
        <jar jarfile="${jar.dest}/${final.name}.jar"
             compress="true"
             basedir="${build.dest}"
             excludes="${jar.excludelist}">
        </jar>
    </target>

	
    <!-- ================================================================= -->
    <!-- Documentation processes                                           -->
    <!-- ================================================================= -->

    <!-- JavaDoc                                                           -->
    <!-- creates Reference.xml -->
    <target name="javadoc" depends="">
    	<javadoc destdir="${doc.src}"
    	    packagenames="${packages}"
    	    failonerror="true"
    	    additionalparam="-breakiterator"
    	    sourcepath="${build.src}">
    	    <doclet name="com.mf.doclet.docbook.DocBookDoclet"
    		    path="Documentation/src/Tools/dbdoclet.jar"> 
    	    </doclet>
	    </javadoc>
    </target>

    <!-- FunctionDocs                                                      -->
    <target name="functiondocs" depends="">
    	<exec command="doc/tools/builddocs.bat"/>
    </target>

    <!-- Copy image-files to handbook directory -->
    <target name = "imageFiles">
    <copy todir="${dist.dir}/handbook/">
    	<fileset dir="doc/src/" includes="**/*.gif">
        </fileset>
    	<fileset dir="doc/src/" includes="**/*.jpg">
        </fileset>
    </copy>
    <copy todir="${upload.dir}/handbook_php/">
    	<fileset dir="doc/src/" includes="**/*.gif">
        </fileset>
    	<fileset dir="doc/src/" includes="**/*.jpg">
        </fileset>
    </copy>
    </target>
	
    <!-- xml to  php  -->
    <target name="xmltophp" depends="">
	<java jar="./libs/saxon.jar" fork="true">
		<arg value='doc/src/doc.xml' />
		<arg value='doc/DocBook/xsl/html/chunk.xsl' />
		<arg value="base.dir=upload/handbook_php/" />
		<arg value='chunk.section.depth="1"' />
		<arg value='chunk.first.sections="0"' />
		<arg value='generate.section.toc.level="0"' />
		<arg value='toc.section.depth="1"' />
		<arg value='toc.max.depth="3"' />
		<arg value='generate.index="1"' />
		<arg value='html.ext=".php"' /> 
		<arg value='use.id.as.filename="1"' /> 
		<arg value='html.extra.head.links="0"' />
		<arg value='html.stylesheet="../../formats.css"' /> 
		<arg value='ignore.image.scaling="1"' />
    </java>
    </target>

    <!-- xml to  html  -->
    <target name="xmltohtml" depends="">
	<java jar="./libs/saxon.jar" fork="true">
		<arg value='doc/src/doc.xml' />
		<arg value='doc/DocBook/xsl/html/chunk2.xsl' />
		<arg value="base.dir=upload/handbook/" />
		<arg value='chunk.section.depth="1"' />
		<arg value='chunk.first.sections="0"' />
		<arg value='generate.section.toc.level="0"' />
		<arg value='toc.section.depth="1"' />
		<arg value='toc.max.depth="3"' />
		<arg value='generate.index="1"' />
		<arg value='html.ext=".html"' /> 
		<arg value='use.id.as.filename="1"' /> 
		<arg value='html.extra.head.links="0"' />
		<arg value='html.stylesheet="../../formats.css"' /> 
		<arg value='ignore.image.scaling="1"' />
    </java>
    </target>

    <!-- xml to help  -->
    <target name="xmltohelp" depends="">
	<java jar="./libs/saxon.jar" fork="true">
		<arg value='doc/src/doc.xml' />
		<arg value='doc/DocBook/xsl/html/chunk.xsl' />
		<arg value="base.dir=Documentation/help/" />
		<arg value='chunk.section.depth="1"' />
		<arg value='chunk.first.sections="0"' />
		<arg value='generate.section.toc.level="0"' />
		<arg value='toc.section.depth="1"' />
		<arg value='toc.max.depth="3"' />
		<arg value='generate.index="1"' />
		<arg value='html.ext=".html"' /> 
		<arg value='use.id.as.filename="1"' /> 
		<arg value='html.extra.head.links="0"' />
		<arg value='html.stylesheet="../../formats.css"' /> 
		<arg value='ignore.image.scaling="1"' />
    </java>
    </target>
 
    <!-- xml to  fo -->
    <target name="xmltofo" depends="">
	<java jar="./libs/saxon.jar" fork="true">
		<arg line="-o doc/src/doc.fo doc/src/doc.xml
		doc/DocBook/xsl/fo/docbook2.xsl" />
        <arg value='paper.type="A4"' />
		<arg value='chunk.section.depth="0"' />
		<arg value='chunk.first.sections="0"' />
		<arg value='generate.section.toc.level="1"' />
		<arg value='toc.section.depth="1"' />
		<arg value='toc.max.depth="3"' />
		<arg value='generate.index="1"' />
	</java>
    </target>
	
    <!-- fo to  pdf   -->
     <target name="fotopdf" depends="">   
        <java classpath="avalon-framework.jar:batik" jar="libs/fop.jar" fork="true">
    		<arg value="doc/src/doc.fo" />
    		<arg value='-d' />
    		<arg value="upload/JMathLibManual_${version}.pdf" />
    	</java>
     </target>
 
    <!-- zip doc files -->
	<target name = "zip_docs" description="build documentation distro">
	  <zip zipfile="${upload.dir}/${final.name}_docs_php.zip" >
        <zipfileset dir="${upload.dir}/handbook_php" >
			<include name="**"/>
		</zipfileset>
      </zip>
	  <zip zipfile="${upload.dir}/${final.name}_docs_html.zip" >
        <zipfileset dir="${dist.dir}/handbook/" >
			<include name="**"/>
		</zipfileset>
      </zip>
	</target>

    <!-- AllDocs: create all documenation files -->
    <target name="alldocs" depends="functiondocs, imageFiles, xmltophp, 
    	xmltohtml, xmltofo, fotopdf, zip_docs"> 
    </target>

	
    <!-- ================================================================= -->
    <!-- create installer                                                  -->
    <!-- ================================================================= -->
	
    <!-- copy classes and sources -->
    <target name = "copy_to_upload" description="copy distribution files to upload directory">
        <!-- classes directory -->
        <copy todir="${dist.dir}/bin">
	         <fileset dir="${build.dest}">
	         <include name="**"/>
	         </fileset>
        </copy>

        <!-- source directory -->
        <copy todir="${dist.dir}/src">
	         <fileset dir="${build.src}">
	         <include name="**"/>
	         </fileset>
        </copy>

        <!-- others -->
        <copy todir="${dist.dir}">
	         <fileset dir="${build.dir}">
	         <include name="JMathLib.html"/>
	         <include name="JMathLib.properties"/>
	         <include name="JMathLib.local.properties"/>
	         <include name="license.txt"/>
		     <include name="ChangeLog.txt"/>
	         <include name="JMathLib.html"/>
             </fileset>
	         <fileset dir="${upload.dir}">
		     <include name="JMathLibManual_${version}.pdf"/>
			 </fileset>
        </copy>
    	
    </target>

    <!-- create java launcher for awt gui-->
    <target name="javalauncher" depends="">
    	<exec executable="c:\programme\nsis\makensis">
    		<arg value="installer\JMathLib.nsi"/>
    	</exec>
    </target>

    <!-- create java launcher for swing gui-->
    <target name="javalauncherswing" depends="">
    	<exec executable="c:\programme\nsis\makensis">
    		<arg value="installer\JMathLibSwing.nsi"/>
    	</exec>
    </target>

    <!-- create installer -->
    <target name="installer" depends="">
    	<exec executable="${nsis.path}makensis">
    		<arg value="installer\JMathLibInstall.nsi"/>
    		<env key="JMathLibVersion" value="${version}"/>
    	</exec>
    </target>
	
	<!-- create zip files for distribution -->
    <target name = "distro_zips" description="build desktop distro">
    
        <delete file="${upload.dir}/${final.name}.tar.gz" />
        <delete file="${upload.dir}/${final.name}.zip" />

	    <!-- create tar.gz file -->
        <tar tarfile="${upload.dir}/${final.name}.tar">
            <tarfileset dir="${dist.dir}">
		    	<include name="bin/**" />
		    	<include name="src/**"/>
			    <include name="handbook/**"/>
				<exclude name="JMathLib.exe"/>
				<exclude name="JMathLibSwing.exe"/>
            	<include name="*.*"/>
		    </tarfileset>
        </tar>

        <gzip zipfile="${upload.dir}/${final.name}.tar.gz"
            src="${upload.dir}/${final.name}.tar" />

        <delete file="${upload.dir}/${final.name}.tar" />

        <!-- create a zip file -->
	    <zip zipfile="${upload.dir}/${final.name}.zip" >
            <zipfileset dir="${dist.dir}" >
			    <include name="bin/**" />
			    <include name="src/**"/>
			    <include name="handbook/**"/>
				<exclude name="JMathLib.exe"/>
				<exclude name="JMathLibSwing.exe"/>
			    <include name="*.*"/>
	     </zipfileset>
        </zip>
	</target>
	
    <!-- AllInstall: create full installer -->
    <target name="allinstallers" depends="copy_to_upload,
    	javalauncher, javalauncherswing, installer, distro_zips"> 
    </target>

    <!-- ================================================================= -->
    <!-- W E B  S I T E                                                    -->
    <!-- ================================================================= -->
    <target name="website" 
    	    description="prepare website update" 
    	    depends="alldocs, allinstallers">
		<delete includeEmptyDirs="true" dir="${website.dir}"/>

		<copy todir="${website.dir}">
			<fileset dir="${dist.dir}">
				<include name="bin/**"/>
			</fileset>
		</copy>

		<delete file="${website.dir}/Documentation.tar.gz"/>
		<delete file="${website.dir}/Documentation.zip"/>
	

		<delete file="${jar.dest}/${final.name}.jar"/>
	        <jar jarfile="${jar.dest}/${final.name}.jar"
	             compress="true">
		     <fileset dir="${dist.dir}/Classes">
		                <include name="**" />
				<exclude name="MathLib/Functions/*/*.class"/>
				<exclude name="MathLib/Functions/*/*.m"/>
				<include name="MathLib/Functions/*.class"/>
				<exclude name="MathLib/Tools/**"/>
				<exclude name="spoke/**"/>
				<include name="*.*"/>
				<exclude name="*.zip"/>
				<exclude name="*.jar"/>
		      </fileset>
	        </jar>
	
		<delete file="${zip.dir}/website.tar"/>
		<delete file="${zip.dir}/website.tar.gz"/>
	
		<tar tarfile="${zip.dir}/website.tar">
		        <tarfileset dir="${dist.dir}/WebSite">
			        <include name="**" />
			</tarfileset>
		</tar>
	
		<gzip zipfile="${zip.dir}/website.tar.gz"
			src="${zip.dir}/website.tar" />
	
		<delete file="${zip.dir}/website.tar"/>
    </target>

    <!-- ================================================================= -->
    <!-- W E B  D I S T                                                    -->
    <!-- ================================================================= -->
    <target name="webdist" description="prepare web distribution" depends="">

        <delete file="${dist.dir}/Classes/JMathLibSmallApplet.jar"/>
        <delete file="${upload.dir}/JMathLib-web.tar.gz"/>
        <delete file="${upload.dir}/JMathLib-web.zip"/>
        
        <!-- Create jar files with minimun size. Necessary files only!! -->
        <!-- User functions and m-files are only loaded on demand       -->
        <jar jarfile="${dist.dir}/bin/JMathLibSmallApplet.jar" compress="true">
            <fileset dir="${dist.dir}/bin">
                <include name="jmathlib/webFunctionsList.dat"/>
	            <include name="**/*.class" />
                <exclude name="MathLib/Functions/*/*.class"/>
                <include name="MathLib/Functions/General/startup.m"/>
                <include name="MathLib/Functions/*.class"/>
                <exclude name="MathLib/Tools/**"/>
                <exclude name="MathLib/UI/AWT/**"/>
                <exclude name="MathLib/UI/Swing/**"/>
            </fileset>
        </jar>
        
        <!-- copy jar-file to classes directory -->
        <!--copy todir="${dist.dir}/Classes">
            <fileset dir="${dist.dir}">
	            <include name="JMathLibSmallApplet.jar"/>
            </fileset>
        </copy-->
    
        <tar tarfile="${upload.dir}/${final.name}-web.tar">
            <tarfileset dir="${dist.dir}">
                <include name="Classes/**" />
                <exclude name="Classes/MathLib/Tools/**"/>
                <include name="JMathLib.html"/>
                <include name="readme-web.txt"/>
            </tarfileset>
        </tar>

	    <gzip zipfile="${upload.dir}/${final.name}-web.tar.gz"
		    src="${upload.dir}/${final.name}-web.tar" />
    	
        <delete file="${upload.dir}/JMathLib-web.tar"/>

        <zip zipfile="${upload.dir}/${final.name}-web.zip">
            <zipfileset dir="${dist.dir}">
                <include name="Classes/**" />
                <exclude name="Classes/MathLib/Tools/**"/>
                <include name="JMathLib.html"/>
                <include name="readme-web.txt"/>
            </zipfileset>
        </zip>

    </target>


    <!-- ================================================================= -->
    <!-- C L E A N                                                         -->
    <!-- ================================================================= -->
    <target name="clean" >
	    <delete dir="${build.dest}/MathLib" />
    </target>

    <!-- ================================================================= -->
    <!-- C L E A N  - U P L O A D                                          -->
    <!-- ================================================================= -->
    <target name="cleanupload" >
	    <delete dir="${dist.dir}" />
        <delete dir="${upload.dir}"  />
    </target>

    <!-- ================================================================= -->
    <!-- Full distribution:                                                -->
    <!-- ================================================================= -->
    <target name="all" depends="cleanupload, alldocs, allinstallers, 
    	 distro_zips, webdist"> 
    </target>

	
</project>
